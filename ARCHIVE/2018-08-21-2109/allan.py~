from math import sqrt

def crivo(n):
    if n <= 2:
        return [n]
    if n == 3:
        return [2, 3]
    n1 = int(sqrt(n)+1)
    inteiros = [i for i in range(2, n1)]
    inteiros.insert (len(inteiros), n)
    i = 0
    while i != len(inteiros)-1:
        for k in inteiros:
            if k != inteiros[i] and k%inteiros[i] == 0:
                inteiros.remove(k)
        i += 1
    return inteiros

def decompor(n):
    primos_ate_n = crivo(n)
    fatores = list(); i = 0
    while n != 1:
        if n%primos_ate_n[i] == 0:
            n = n/primos_ate_n[i]
            fatores.append(primos_ate_n[i])
        else:
            i += 1
        if i == len(primos_ate_n):
            return [n]
    return fatores

def divisores(fatoresn):
    print ("Entrei na divisores()")
    fatores_primos = fatoresn
    divisores = [1]
    for f in fatores_primos:
        divisores += [f*j for j in divisores if f*j not in divisores]
    return divisores

def despojado(n):
    fatores = decompor(n)
    if len(fatores) > 1 and fatores == list(set(fatores)):
        return True
    return False

n = int(input())
div = divisores(decompor(n))
print(div)
count = 0
print(count)
