#include "bits/stdc++.h"
using namespace std;

////////////// Prewritten code follows. Look down for solution. ////////////////
#define x first
#define y second
#define len(x) ((int)(x).size())
using pii = pair<int, int>;
using ll = long long;
using llu = long long unsigned;
using ld = long double;

const ld EPS = 1e-9;
inline int cmp(ld x, ld y = 0, ld tol = EPS) {
  return (x <= y + tol) ? (x + tol < y) ? -1 : 0 : 1;
}

const int MOD = 1;
inline int mod (ll x, int m = MOD) {
  return (int)(((x%m) + m)%m);
}

////////////////////////// Solution starts below. //////////////////////////////

const int MAXN = 1e6+10;

int z[MAXN];

void zfunction (string s) {
  int n = len (s);
  assert (s.size() < MAXN);
  fill (z, z+n, 0);
  for (int i = 1, l = 0, r = 0; i < n; ++i) {
    if (i <= r) z[i] = min (r-i+1, z[i-l]);
    while (i+z[i] < n && s[z[i]] == s[i+z[i]])
      ++z[i];
    if (i+z[i]-1 > r)
      l = i, r = i+z[i]-1;
  }
}

int func (string str, int sz) {
  zfunction (str);
  int r = 0;
  for (int i = 1; i < len (str); i++)
    if (z[i] == sz) {
      ++r;
      i += sz-1;
    }

  return r;
}

int main () {
  cout << "HERE\n";
  cin.tie (0);
  ios::sync_with_stdio (false);
  cout << "HERE\n";

  cout << "why\n";
  string str;
  string music, p;
  cout << "here";
  while (true) {
    getline (cin, p);
    cout << p;
    while (getline (cin, str), str != "") {
      music += str;
      cout << music << '\n';
      str = "";
    }
    if (music == "EOF")
      break;
    int qnt = func (p+"#"+music, len (p));
    int idx = -1;

    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) {
      getline (cin, p);
      music = "";
      while (getline (cin, str), str != "")
	music += str;
      int aux = func (p+"#"+music, len (p));
      if (qnt < aux) {
	qnt = aux;
	idx = i;
      }
    }
    
    printf ("%d\n", idx);
  }
  
  return 0;
}
