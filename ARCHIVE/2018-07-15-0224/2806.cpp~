#include <bits/stdc++.h>
using namespace std;

////////////// Prewritten code follows. Look down for solution. ////////////////
#define x first
#define y second
#define pb push_back
#define foreach(x, v) for (typeof (v).begin() x=(v).begin(); x !=(v).end(); ++x)
#define For(i, a, b) for (int i=(a); i<(b); ++i)
#define D(x) cerr << #x " is " << (x) << endl
typedef pair<int, int> pii;
typedef long long ll;
typedef long double ld;
const int INF = 1e9;

const double EPS = 1e-9;
int cmp(double x, double y = 0, double tol = EPS) {
  return (x <= y + tol) ? (x + tol < y) ? -1 : 0 : 1;
}

////////////////////////// Solution starts below. //////////////////////////////

int n, k;
set<string> s;
string str;
char arr[55];

int main ()
{
  string sss = "abcdef";
  scanf ("%d", &n);
  while (n--) {
    scanf ("%s", arr);
    //   for (int i = 0; arr[i] != '\0'; i++)
    //    arr[i] = tolower (arr[i]);
    s.insert (arr);
  }
  scanf ("%d", &n);
  while (n--) {
    scanf ("%s %d", arr, &k);
    int tst = 0;
    for (int i = 0; i < k; i++) {
      scanf ("%s", arr);
      //for (int i = 0; arr[i] != '\0'; i++)
      //	arr[i] = tolower (arr[i]);
      str = arr;
      vector<string> strs;
      strs.pb (str);
      for (int r = 0, l = 0; r < str.size(); r++)
	if (str[r] == '-' || r == (str.size()-1)) {
	  if (r == str.size()-1) ++r;
	  strs.pb (str.substr(l, r-l));
	  l = r+1;
	}
      for (string ss : strs) {
	
	if (s.count (ss)) {
	  tst++;
	  break;
	}
      }
    }
    if (tst > k/2)
      printf ("porcao tipica\n");
    else
      printf ("porcao comum\n");
  }
  
  return 0;
}
